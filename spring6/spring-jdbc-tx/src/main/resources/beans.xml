<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    <context:component-scan base-package="com.gusty.spring6.tx"></context:component-scan>-->

    <!--引入外部屬性文件，創建數據源對象-->
<!--    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>-->

<!--    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
<!--        <property name="url" value="${jdbc.url}"></property>-->
<!--        <property name="username" value="${jdbc.user}"></property>-->
<!--        <property name="password" value="${jdbc.password}"></property>-->
<!--        <property name="driverClassName" value="${jdbc.driver}"></property>-->
<!--    </bean>-->

    <!--創建jdbcTemplate對象，注入數據源-->
<!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
<!--        <property name="dataSource" ref="druidDataSource"></property>-->
<!--    </bean>-->

<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="druidDataSource"></property>-->
<!--    </bean>-->

    <!--
        開啟事務的註解驅動
        通過註解@Transactional所標識的方法或標識的類中所有的方法，都會被事務管理器管理事務
    -->
    <!-- transaction-manager屬性的默認值是transactionManager ，如果事務管理器bean的id正好就是這個默認值，則可以省略這個屬性-->
<!--    <tx:annotation-driven transaction-manager="transactionManager" />-->

</beans>